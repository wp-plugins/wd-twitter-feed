<p>
    <label><?php echo $this->label; ?></label>
</p>
<p>
    <input type="hidden" name="<?php echo $this->name ?>" value="<?php echo $this->value ?>"/>
    <button class="choose_attachment">Choose Attachment</button>
    <?php if( $this->value ): ?>
        <?php echo the_attachment_link( $this->value ); ?>
    <?php endif; ?>
</p>
<script>
// http://mikejolley.com/2012/12/using-the-new-wordpress-3-5-media-uploader-in-plugins/
var file_frame;

jQuery('.choose_attachment').on('click', function( event )
{
    event.preventDefault();

    // If the media frame already exists, reopen it.
    if ( file_frame ) {
        file_frame.open();
        return;
    }

    // Create the media frame.
    file_frame = wp.media.frames.file_frame = wp.media({
        title: jQuery( this ).data( 'uploader_title' ),
        button: {
            text: jQuery( this ).data( 'uploader_button_text' ),
        },
        multiple: false  // Set to true to allow multiple files to be selected
    });
    
    file_frame.on('open',function() {
        var attachment = wp.media.attachment(<?php echo $this->value ?>);
        attachment.fetch();
        file_frame.state().get('selection').add(attachment);
    });

    // When an attachment is selected, run a callback.
    file_frame.on( 'select', function() {
        // We set multiple to false so only get one attachment from the uploader
        attachment = file_frame.state().get('selection').first().toJSON();

        // Do something with attachment.id and/or attachment.url here
        jQuery('input[name="<?php echo $this->name ?>"]').val( attachment.id );
    });

    // Finally, open the modal
    file_frame.open();
  });
  </script>